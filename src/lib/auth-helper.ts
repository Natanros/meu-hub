import { getToken } from "next-auth/jwt";
import { NextRequest } from "next/server";

export async function getAuthenticatedUser(request: NextRequest) {
  try {
    // Debug: verificar se h√° cookies
    const cookies = request.headers.get("cookie");
    const isDev = process.env.NODE_ENV === "development";

    if (isDev) {
      console.log("üç™ Cookies recebidos:", cookies ? "SIM" : "N√ÉO");
      console.log("üåç Ambiente:", process.env.NODE_ENV);
      console.log("üîó NEXTAUTH_URL:", process.env.NEXTAUTH_URL);
    }

    // Tentar via getToken com configura√ß√£o espec√≠fica
    const token = await getToken({
      req: request,
      secret:
        process.env.NEXTAUTH_SECRET ||
        "dev-secret-key-for-local-development-consistent",
      secureCookie: process.env.NODE_ENV === "production", // true em produ√ß√£o
    });

    if (isDev) {
      console.log("üîë Token decodificado:", token ? "SIM" : "N√ÉO");
      if (!token && cookies) {
        console.log(
          "‚ö†Ô∏è Cookie presente mas token n√£o decodificado - verifique NEXTAUTH_SECRET"
        );
      }
    }

    if (token?.id) {
      if (isDev) {
        console.log("‚úÖ Usu√°rio autenticado via token:", token.id);
      }
      return {
        id: token.id as string,
        email: token.email as string,
        name: token.name as string,
      };
    }

    if (isDev) {
      console.log("‚ùå Usu√°rio n√£o autenticado");
    }
    return null;
  } catch (error) {
    console.error("üí• Erro na autentica√ß√£o:", error);
    return null;
  }
}
